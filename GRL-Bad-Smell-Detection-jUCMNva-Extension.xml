<?xml version="1.0" encoding="UTF-8" standalone="no"?><Rules><Rule><Name>Unknown contribution</Name><Description/><Classification>grl::Contribution</Classification><Query>self.grlspec.links -&gt; select(link:grl::ElementLink | link.oclIsTypeOf(grl::Contribution))&#13;
				  -&gt; collect(l|l.oclAsType(grl::Contribution))	-&gt; asSequence()</Query><Constraint>self.contribution.toString() &lt;&gt; 'Unknown'</Constraint><Utilities/><WarningOnly>true</WarningOnly></Rule><Rule><Name>Disrubted operationalization</Name><Description/><Classification>grl::IntentionalElement</Classification><Query>self.grlspec.intElements</Query><Constraint>self.linksDest-&gt;notEmpty() implies self.linksDest-&gt;&#13;
forAll (ld| (ld.src.oclAsType(grl::IntentionalElement).type.toString()='Task' or&#13;
 ld.src.oclAsType(grl::IntentionalElement).type.toString()='Ressource') or ld.oclIsTypeOf(grl::Dependency) )</Constraint><Utilities/><WarningOnly>true</WarningOnly></Rule><Rule><Name>Un-operationalized objective</Name><Description/><Classification>grl::IntentionalElement</Classification><Query>self.grlspec.intElements-&gt; select (ie | not(ie.oclIsTypeOf(grl::kpimodel::Indicator)) )-&gt; asSequence()</Query><Constraint>(self.type.toString()= 'Indicator' or self.type.toString()= 'Task' or self.type.toString()= 'Ressource' ) or  self.linksDest-&gt;size()&lt;&gt;0&#13;
</Constraint><Utilities/><WarningOnly>true</WarningOnly></Rule><Rule><Name>Negligible submodel</Name><Description/><Classification>grl::IntentionalElement</Classification><Query>self.grlspec.intElements  -&gt; select(ie|not(ie.oclIsTypeOf(grl::kpimodel::Indicator))) -&gt; asSequence()</Query><Constraint> (if self.grlspec.actors-&gt;size() = 0  then (not ( (self.linksSrc-&gt;isEmpty()  ) and&#13;
not (self.type.toString()= 'Indicator' or self.type.toString()= 'Task' or self.type.toString()= 'Ressource' ) and &#13;
self.importanceQuantitative.toString()='0')) else&#13;
 (not ( (self.linksSrc-&gt;isEmpty()  ) and&#13;
not (self.type.toString()= 'Indicator' or self.type.toString()= 'Task' or self.type.toString()= 'Ressource' ) and &#13;
self.importanceQuantitative.toString()='0') or self.refs.contRef.toString().equalsIgnoreCase('null')-&gt;first()) endif)</Constraint><Utilities/><WarningOnly>true</WarningOnly></Rule><Rule><Name>Non-strategic submodel</Name><Description/><Classification>grl::IntentionalElement</Classification><Query>self.grlspec.intElements-&gt; select (ie | not(ie.oclIsTypeOf(grl::kpimodel::Indicator)) )-&gt; asSequence()</Query><Constraint>not ( (self.linksSrc-&gt;isEmpty() or self.linksSrc-&gt;select(ls|ls.oclIsTypeOf(grl::Dependency))-&gt;size() =self.linksSrc-&gt;size() ) and &#13;
(self.type.toString()= 'Task' or self.type.toString()= 'Ressource'  ))  or self.refs.contRef.toString().equalsIgnoreCase('null')-&gt;first()</Constraint><Utilities/><WarningOnly>true</WarningOnly></Rule></Rules>